import type { Response, Request, NextFunction } from 'express';
export interface ExpressJsonErrorHandlerOptions {
    log?: ({ err, req, res }: {
        err: Error;
        req: Request;
        res: Response;
    }) => void;
    extraFields?: string[];
}
export declare type ErrorWithStatus = Error & {
    status?: number;
    statusCode?: number;
};
export interface ResponseBody {
    status: number;
    stack?: any;
    message?: string;
    code?: any;
    name?: any;
    type?: any;
}
declare const _default: ({ log, extraFields }?: ExpressJsonErrorHandlerOptions) => (err: ErrorWithStatus, req: Request, res: Response, _: NextFunction) => void;
export default _default;
